#format = Flat;
//#bits = 16;
#address = 0x7c00;

Byte[] gdtSegments = [
	//[ // NULL segment
		0, 0, // Bit[20] limit = 0; // Bit[20] limit[0 .. 15];
		0, 0, 0, //Byte4 base = 0; // Byte4 base[0 .. 2];
		
		0b00010000, /*
		Bit present = 0;
		Bit2 ringLevel = 0;
		bitfield[5] access {
			1;
			executable = 0;
			direction = 0;
			readWrite = 0;
			accessed = 0;
		};*/
		
		0, /* bitfield[4] flags {
			granularity = 0;
			size = 0;
			0;
			0;
		};*/
		// Bit[20] limit[16 .. 19];
		0, // Byte4 base[3];
	//],
	//[ // kernel code segment
		0xFF, 0xFF, // Bit[20] limit = 0xFFFFF; // Bit[20] limit[0 .. 15];
		0, 0, 0, // Byte4 base = 0; // Byte4 base[0 .. 2];
		
		0b10011010, /*
		Bit present = 1;
		Bit2 ringLevel = 0;
		bitfield[5] access {
			1;
			executable = 1;
			direction = 0;
			readWrite = 1;
			accessed = 0;
		};*/
		
		0b11001111,
		/*bitfield[4] flags {
			granularity = 1;
			size = 1;
			0;
			0;
		};*/
		// Bit[20] limit[16 .. 19];
		0, // Byte4 base[3];
	//],
	//[ // kernel data segment
		0xFF, 0xFF, //Bit[20] limit = 0xFFFFF; // Bit[20] limit[0 .. 15];
		0, 0, 0, //Byte4 base = 0; // Byte4 base[0 .. 2];
		
		0b10010010, /*Bit present = 1;
		Bit2 ringLevel = 0;
		bitfield[5] access {
			1;
			executable = 0;
			direction = 0;
			readWrite = 1;
			accessed = 0;
		};*/
		
		0b11001111, /*bitfield[4] flags {
			granularity = 1;
			size = 1;
			0;
			0;
		};*/
		// Bit[20] limit[16 .. 19];
		0, // Byte4 base[3];
	//],
];

struct { // 6 bytes, goes in GDTR (GDT register)
	Byte2 size = sizeof(gdtSegments) - 1; // size is actual size - 1
	GDTSegmentDescriptor[] Pointer address = &gdtSegments;
} gdtDescriptor;


function EntryPoint() #noRet #noStack {
	Cli();
	// @TODO disable NMI
	// @TODO enable A20
	
	Lgdt(gdtDescriptor);
	%eax = %cr0;
	%al |= 1; // set PE (Protection Enable) bit in CR0 (Control Register 0)
	%cr0 = %eax;

	%ax = sizeof(GDTSegmentDescriptor) * 2;
	%ds = %ax;
	%es = %ax;
	%fs = %ax;
	%ss = %ax;

	Ljmp(sizeof(GDTSegmentDescriptor) * 1, .PModeMain);
.PModeMain:
	
}

#WriteData();

#Align(512 - 2; padWith = 0x00);
#Put2(0xaa55); // boot sector magic number
